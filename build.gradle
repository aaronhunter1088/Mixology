buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.7"
        classpath "org.grails.plugins:hibernate5:7.3.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.7"
    }
}

version "0.1"
group "mygrailsapp"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.bertramlabs.asset-pipeline"

repositories {
    mavenCentral()
    maven { url "https://grails.org/plugins" }
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo.grails.org/ui/native/plugins" }
    maven { url "https://maven.restlet.talend.com" }
    maven { url "https://maven.restlet.com" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    all {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: 'commons-logging'
        exclude group: 'ch.qos.logback'
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.openapitools/openapi-generator
    implementation 'org.openapitools:openapi-generator:7.2.0'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-api
    testImplementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.3.0'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-data-rest
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.7.0'

    // https://mvnrepository.com/artifact/org.grails.plugins/jaxrs
    implementation 'org.grails.plugins:jaxrs:0.6'
    implementation 'org.grails.plugins:jaxrs-restlet:3.1.0'
    // javax
    //implementation 'org.jboss.resteasy:jaxrs-api:3.0.12.Final'
    //implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.15.2'
    // mail
    implementation 'com.sun.activation:javax.activation:1.2.0'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    compileOnly group: 'org.codehaus.groovy', name: 'groovy-templates', version: '2.5.7'
    //compileOnly 'org.grails.plugins:mail:3.0.0'
    //compileOnly "org.grails.plugins:mail:2.0.0.RC6"
    // log4j2
    //implementation 'org.grails:grails-plugin-log4j:2.5.6'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    compileOnly "org.grails:grails-core"
    compileOnly "org.grails:grails-dependencies"
    profile "org.grails.profiles:web"
    // spring security core
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
    implementation 'org.springframework.security:spring-security-core:6.1.5'
//    implementation ("org.springframework.security:spring-security-core:6.0.2") {
//        exclude module: "spring-boot-starter-logging"
//        exclude module: "logback-classic"
//    }
    implementation ("org.grails.plugins:spring-security-core:6.1.0") {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    // codec
    implementation "commons-codec:commons-codec:1.5"
    // string utils
    implementation "org.apache.commons:commons-lang3:3.12.0"
    // mysql
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'
    // https://projectlombok.org
    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.11.Final"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:gsp"
    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.4.7"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:4.0.0"
}

bootJar {
    manifest {
        attributes 'Main-Class': 'init.mixology.Application'
    }
    //mainClassName = 'init.mixology.Application'
}
bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

//webdriverBinaries {
//    if (!System.getenv().containsKey('GITHUB_ACTIONS')) {
//        chromedriver {
//            version = '2.45.0'
//            architecture = 'X86_64'
//            fallbackTo32Bit = true
//        }
//        geckodriver '0.30.0'
//    }
//}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    if (!System.getenv().containsKey('GITHUB_ACTIONS')) {
        systemProperty 'webdriver.chrome.driver', System.getProperty('webdriver.chrome.driver')
        systemProperty 'webdriver.gecko.driver', System.getProperty('webdriver.gecko.driver')
    } else {
        systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
        systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
    }
}

assets {
    minifyJs = true
    minifyCss = true
}
