# Log Configuration File
# Prints to an Instance file, and a Daily file
name=PropertiesConfig
property.filename=logs
property.name=Mixology Logs
appenders = console, file, rolling
property.date = ${date:MM}-${date:dd}-${date:yyyy}
property.rollOverDaily = %d{MM-dd-yyyy}
#property.rollOverHourly = %d{MM-dd-yyyy_hh}
#property.rollOverMinutely = %d{MM-dd-yyyy_hh-mm}
property.patternWithColor= %highlight{%-5level}{FATAL=bg_red, ERROR=bg_red, WARN=yellow, INFO=green, DEBUG=cyan} %d{MM-dd-yyyy hh:mm:ss a} [Method:%M] %c:%L - %msg%n
property.patternNoColor= [%-5level] %d{MM-dd-yyyy HH:mm:ss.SSS} [Method:%M] %c:%L - %msg%n

# Appenders are responsible for writing the LogEvents to its target destination
# Appenders always have a name so that they can be referenced from Loggers.
# https://logging.apache.org/log4j/2.x/manual/appenders.html

#Shows currently running session logs
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.disableAnsi=false
appender.console.layout.pattern = ${patternWithColor}

#Every run gets printed to this file
appender.file.type= File
appender.file.name= FileOutput
appender.file.fileName= ${filename}/master.log
appender.file.layout.type= PatternLayout
appender.file.layout.pattern= ${patternNoColor}
appender.file.layout.footer=%n
appender.file.append= true

#Every run for an entire day
appender.rolling.type = RollingFile
appender.rolling.name = RollingFileOutput
appender.rolling.fileName = ${filename}/${date}/mixology.log
appender.rolling.filePattern = ${filename}/${date}/${rollOverDaily}/mixology.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = ${patternNoColor}
appender.rolling.append= false
appender.rolling.layout.footer=%n
appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger
rootLogger = STDOUT
rootLogger.level = info
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.file.ref = FileOutput
rootLogger.appenderRef.rolling.ref = RollingFileOutput